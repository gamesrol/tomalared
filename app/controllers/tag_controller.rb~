class TagController < ApplicationController

#  uses_yui_editor
#  layout "admin/layout"   # admin layout
  include Ozimodo::CookieAuth      # login stuff
# session :disabled => false
  helper :tumble, :admin

  # the big man
  def is_admin_user?
    (logged_in? && current_user[:id] == User::ADMIN_USER_ID)
  end

  #
  # tag management
  #
  
  # ajaxly rename the tag
  def rename_tag
    if request.post? 
      tag = Tag.find(params[:tag_id])
      tag.name = params[:tag_name]
      tag.save
      render :text => tag.name
    end
  end
  
  # up and delete a tag
  def delete_tag
    tag = Tag.find(params[:id])
    tag.destroy
    flash[:notice] = 'Tag deleted.'
    redirect_to :action => :list_tags
  end

  def tag_users
    @tag = Tag.find(params[:id])
    @tags_users = Tag.list_users[@tag.id]

  end 
    
  # up and paginate a tag
  def list_tags
	 @tags = @tag = Tag.find(:all) 
  end

  def list_post_tags
	@po = Post.new
	@tag = Tag.find(:all,:conditions => "name like '#{params[:tag]}'")
    # if more than one tag is specified, get the posts containing all the
    # passed tags.  otherwise get all the posts with just the one tag.

	if params[:type]
	  @post_pages, @posts = paginate :post, {:per_page => 5, 
						 :joins => 'JOIN posts_tags pt ON pt.post_id = posts.id', 
						 :conditions => ['pt.tag_id = tags.id AND tags.name = ? AND posts.post_type = ?', params[:tag], params[:type]],
						 :include => [:tags, :user], :order => 'created_at DESC'}	
	else
	  @post_pages, @posts = paginate :post, {:per_page => 5, 
						 :joins => 'JOIN posts_tags pt ON pt.post_id = posts.id', 
						 :conditions => ['pt.tag_id = tags.id AND tags.name = ?', params[:tag]],
						 :include => [:tags, :user], :order => 'created_at DESC'}	
	end

  end
  
  def follow_tag
#    @tag = Tag.find(params[:id])
#    @tag.users << current_user[:id]
    
	redirect_to :action => :list_tags, :page => params[:page]
  end
  
  def unfollow_tag
	redirect_to :action => :list_tags,:page => params[:page]
  end
end
